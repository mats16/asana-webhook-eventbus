// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
Object {
  "Outputs": Object {
    "EventBusArn": Object {
      "Export": Object {
        "Name": "testArn",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "EventBus7B8748AA",
          "Arn",
        ],
      },
    },
    "EventBusName": Object {
      "Export": Object {
        "Name": "testName",
      },
      "Value": Object {
        "Ref": "EventBus7B8748AA",
      },
    },
    "testReceiveWebhook5B909A85ApiEventSourceA7A86A4FEndpointD4BB684E": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "testReceiveWebhook5B909A85ApiEventSourceA7A86A4FE410ECBA",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "testReceiveWebhook5B909A85ApiEventSourceA7A86A4FDeploymentStageprod80D98979",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "EventBus7B8748AA": Object {
      "Properties": Object {
        "Name": "testEventBusD3C7AA2F",
      },
      "Type": "AWS::Events::EventBus",
    },
    "ProcessPayloadD7D8EC8E": Object {
      "DependsOn": Array [
        "ProcessPayloadServiceRoleDefaultPolicy703A3D84",
        "ProcessPayloadServiceRoleDD611FB2",
      ],
      "Properties": Object {
        "Architectures": Array [
          "arm64",
        ],
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "036e0512c0da399d619928ae37f82513578e973389ee505f497dadfbf5b32597.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "EVENT_BUS_NAME": Object {
              "Ref": "EventBus7B8748AA",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ProcessPayloadServiceRoleDD611FB2",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ProcessPayloadServiceRoleDD611FB2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ProcessPayloadServiceRoleDefaultPolicy703A3D84": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "EventBus7B8748AA",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ProcessPayloadServiceRoleDefaultPolicy703A3D84",
        "Roles": Array [
          Object {
            "Ref": "ProcessPayloadServiceRoleDD611FB2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ReceiveWebhookF29E6128": Object {
      "DependsOn": Array [
        "ReceiveWebhookServiceRoleDefaultPolicyC2FCA2FA",
        "ReceiveWebhookServiceRoleB53C7874",
      ],
      "Properties": Object {
        "Architectures": Array [
          "arm64",
        ],
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "8a8386f8ecd65a5c8ec5102d8c185b6c63e016e7382172956f9d1d17cb4214a9.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "PARAMETER_PREFIX": "/test/HookSecret",
            "PROCESS_PAYLOAD_FUNCTION_NAME": Object {
              "Ref": "ProcessPayloadD7D8EC8E",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ReceiveWebhookServiceRoleB53C7874",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ReceiveWebhookServiceRoleB53C7874": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ReceiveWebhookServiceRoleDefaultPolicyC2FCA2FA": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ssm:GetParameter",
                "ssm:PutParameter",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/test/HookSecret/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ProcessPayloadD7D8EC8E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "ProcessPayloadD7D8EC8E",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ReceiveWebhookServiceRoleDefaultPolicyC2FCA2FA",
        "Roles": Array [
          Object {
            "Ref": "ReceiveWebhookServiceRoleB53C7874",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testReceiveWebhook5B909A85ApiEventSourceA7A86A4FAccount8DC5C9F9": Object {
      "DependsOn": Array [
        "testReceiveWebhook5B909A85ApiEventSourceA7A86A4FE410ECBA",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "testReceiveWebhook5B909A85ApiEventSourceA7A86A4FCloudWatchRole5CD93F6C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "testReceiveWebhook5B909A85ApiEventSourceA7A86A4FCloudWatchRole5CD93F6C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testReceiveWebhook5B909A85ApiEventSourceA7A86A4FDeployment3C2BBB0D494db3bfecbf95ba701cea5af2b6cf62": Object {
      "DependsOn": Array [
        "testReceiveWebhook5B909A85ApiEventSourceA7A86A4FproxyPOST07D813C7",
        "testReceiveWebhook5B909A85ApiEventSourceA7A86A4Fproxy20026547",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "testReceiveWebhook5B909A85ApiEventSourceA7A86A4FE410ECBA",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "testReceiveWebhook5B909A85ApiEventSourceA7A86A4FDeploymentStageprod80D98979": Object {
      "DependsOn": Array [
        "testReceiveWebhook5B909A85ApiEventSourceA7A86A4FAccount8DC5C9F9",
      ],
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "testReceiveWebhook5B909A85ApiEventSourceA7A86A4FDeployment3C2BBB0D494db3bfecbf95ba701cea5af2b6cf62",
        },
        "RestApiId": Object {
          "Ref": "testReceiveWebhook5B909A85ApiEventSourceA7A86A4FE410ECBA",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "testReceiveWebhook5B909A85ApiEventSourceA7A86A4FE410ECBA": Object {
      "Properties": Object {
        "Name": "testReceiveWebhook5B909A85:ApiEventSourceA7A86A4F",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "testReceiveWebhook5B909A85ApiEventSourceA7A86A4Fproxy20026547": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "testReceiveWebhook5B909A85ApiEventSourceA7A86A4FE410ECBA",
            "RootResourceId",
          ],
        },
        "PathPart": "{proxy+}",
        "RestApiId": Object {
          "Ref": "testReceiveWebhook5B909A85ApiEventSourceA7A86A4FE410ECBA",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testReceiveWebhook5B909A85ApiEventSourceA7A86A4FproxyPOST07D813C7": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ReceiveWebhookF29E6128",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "testReceiveWebhook5B909A85ApiEventSourceA7A86A4Fproxy20026547",
        },
        "RestApiId": Object {
          "Ref": "testReceiveWebhook5B909A85ApiEventSourceA7A86A4FE410ECBA",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testReceiveWebhook5B909A85ApiEventSourceA7A86A4FproxyPOSTApiPermissionTesttesttestReceiveWebhook5B909A85ApiEventSourceA7A86A4FC470DA76POSTproxyE0F2DCCA": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ReceiveWebhookF29E6128",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "testReceiveWebhook5B909A85ApiEventSourceA7A86A4FE410ECBA",
              },
              "/test-invoke-stage/POST/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testReceiveWebhook5B909A85ApiEventSourceA7A86A4FproxyPOSTApiPermissiontesttestReceiveWebhook5B909A85ApiEventSourceA7A86A4FC470DA76POSTproxyD5EC62EF": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ReceiveWebhookF29E6128",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "testReceiveWebhook5B909A85ApiEventSourceA7A86A4FE410ECBA",
              },
              "/",
              Object {
                "Ref": "testReceiveWebhook5B909A85ApiEventSourceA7A86A4FDeploymentStageprod80D98979",
              },
              "/POST/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
